@model Admin.Models.ViewModels.LoginVM

@{
    ViewBag.Title = "Login";
}


@using (Html.BeginForm("Index", "Home", new { ReturnUrl = "Index" }, FormMethod.Post))
{
    <br/>
    <br />
<form id="login-form" class="form" role="form">
    <div class="form-group">
        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "Användarnamn" } })
        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "Lösenord" } })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <button type="submit" value="Index" class="btn btn-primary" style="width:280px">Logga in</button>
    <form id="login-form" class="form" role="form">
        <div class="form-group">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "Användarnamn" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "Lösenord" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
        <button type="submit" value="Index" class="btn btn-primary btn-block">Logga in</button>
    </form>
}*@


@*@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{
    <form id="login-form" class="form" role="form">
        <div class="form-group">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "Användarnamn" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "Lösenord" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
        <button type="submit" value="Index" class="btn btn-primary btn-block">Logga in</button>
    </form>
}*@

    <div class="container">
        <span id="create-info">Logga in</span>
        <hr />
        @using (Html.BeginForm("Index", "Home", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Username, "Användarnamn", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, "Lösenord", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Logga in" class="btn btn-success" />
                </div>
            </div>
        </div>
}
    </div>