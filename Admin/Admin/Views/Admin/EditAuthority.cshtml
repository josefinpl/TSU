@model Admin.Models.ViewModels.AuthorityVM

@{
    ViewBag.Title = "Uppdatera aktör";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Current = "Edit";
}

<div class="container">
    <hr />
    <h2>Redigerar @Model.Name</h2>
    <hr />

    @using (Html.BeginForm("EditAuthority", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Category_Id, "Kategori", htmlAttributes: new { @class = "control-label" })

                    @Html.DropDownList("Category_Id", new SelectList(ViewBag.Category, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category_Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    <br />
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, style = "width:500px; height:200px" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.StreetAddress, "Gatuadress", htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Zipcode, "Postnummer", htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.City, "Stad", htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />

            @Html.HiddenFor(model => model.Logo)

            <div class="row">
                <div class="form-group col-md-6">
                    @Html.Label("Nuvarande bild:", htmlAttributes: new { @class = "control-label" })<br /><br />
                    <img src="@Url.Action("Show", "Admin", new { id = Model.Id } )" width="100" height="100" />
                </div>

                <div class="form-group col-md-6">
                    @Html.Label("Ladda upp ny bild, Max 500KB:", htmlAttributes: new { @class = "control-label" })<br /><br />
                    <img id="blah" src="#" /><br /><br />
                    <input type="file" value="Ladda upp bild" name="image1" id="image1" onchange="readURL(this)" /> 
                    

                </div>
            </div>

            <hr />
            @if (Model.Hours != null)
            {
                <div class="row">

                    @Html.Label("Sparade öppettider:", htmlAttributes: new { @class = "control-label" })<br /><br />

                    @foreach (var hour in Model.Hours)
                    {
                        @Html.HiddenFor(model => hour.Id)

                        <div class="form-group col-md-4">
                            <b>@Html.DisplayNameFor(model => hour.Name)</b> <br />
                            @Html.DisplayFor(model => hour.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Beskrivning" } })
                            <br />
                            <b>@Html.Label("Öppettid")</b> <br />
                            <p>
                                @Html.DisplayFor(model => hour.Open, new { htmlAttributes = new { @class = "form-control", @placeholder = "Öppnar" } })
                                -
                                @Html.DisplayFor(model => hour.Close, new { htmlAttributes = new { @class = "form-control", @placeholder = "Stänger" } })
                            </p>
                            <a href="#" onclick="EditHour(@hour.Id)" id="deleteItem" class="deleteItem" data-id="@hour.Id" data-target="#editDialog" data-toggle="modal" data-path="@Url.Action("Edit", "Admin", new { id = hour.Id, authid = hour.Authority_Id })">Ändra öppettid/beskrivning</a>
                            <br />
                            <a href="@Url.Action("DeleteHour", "Admin", new { id = hour.Id, authId = hour.Authority_Id })" style="color:red">Ta bort öppettid</a>

                        </div>
                    }

                </div>
                <br />
            }

            <div class="row">
                <div class="form-group col-md-12">
                    @Html.Label("Lägg till ny öppettid:", htmlAttributes: new { @class = "control-label" })
                    <br />

                    @Html.EditorFor(model => model.Hour.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Beskrivning" } })
                    <br />
                    @Html.EditorFor(model => model.Hour.Open, new { htmlAttributes = new { @class = "form-control", @placeholder = "Öppnar" } })
                    @Html.ValidationMessageFor(model => model.Hour.Open, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.Hour.Close, new { htmlAttributes = new { @class = "form-control", @placeholder = "Stänger" } })
                    @Html.ValidationMessageFor(model => model.Hour.Close, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            @if (Model.Numbers != null)
            {
                <div class="row">

                    @Html.Label("Sparade telefonnummer:", htmlAttributes: new { @class = "control-label" })<br /><br />

                    @foreach (var number in Model.Numbers)
                    {
                        @Html.HiddenFor(model => number.Id)

                        <div class="form-group col-md-4">

                            <b>@Html.DisplayNameFor(model => number.Name)</b> <br />
                            @Html.DisplayFor(model => number.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Beskrivning" } })
                            <br />
                            <b>@Html.DisplayNameFor(model => number.Number1)</b> <br />
                            @Html.DisplayFor(model => number.Number1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Öppnar" } })
                            <br />
                            <a href="#" onclick="EditNumber(@number.Id)" id="deleteItem" class="deleteItem" data-id="@number.Id" data-target="#editDialog" data-toggle="modal" data-path="@Url.Action("Edit", "Admin", new { id = number.Id, authid = number.Authority_Id })">Ändra nummer/beskrivning</a>
                            <br />
                            <a href="@Url.Action("DeleteNumber", "Admin", new { id = number.Id, authId = number.Authority_Id })" style="color:red">Ta bort nummer</a>

                        </div>
                    }

                </div>
                <br />
            }

            <div class="row">
                <div class="form-group col-md-4">
                    @Html.Label("Lägg till nytt nummer:", htmlAttributes: new { @class = "control-label" })
                    <br />

                    @Html.EditorFor(model => model.Number.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Beskrivning" } })

                    @Html.EditorFor(model => model.Number.Number1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nytt Telefonnummer" } })
                    @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="form-group col-md-12">
                    <input type="submit" value="Uppdatera" class="btn btn-success"id="btnElements" />
                </div>
            </div>

        </div>

    }

    <div>
        <hr />
        @Html.ActionLink("Återgå till listan av aktörer", "ListAuthorities")
    </div>

</div>
<div class="modal fade" id="editDialog" tabindex="-1" role="dialog" aria-labelledby="deleteLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="deleteLabel">Redigera</h5>
            </div>
            <div class="modal-body">

            </div>
        </div>
    </div>
</div>

<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah')
                    .attr('src', e.target.result)
                    .width(100)
                    .height(100);
            };
          

            reader.readAsDataURL(input.files[0]);
        }
    }

    var EditNumber = function (id) {
        $.ajax({

            type: "GET",
            url: "/Admin/EditNumber",
            data: { Id: id },
            success: function (response) {
                $(".modal-body").html(response);
                $("#editDialog").modal("show");
            }
        });
    };

    var EditHour = function (id) {
        $.ajax({

            type: "GET",
            url: "/Admin/EditHour",
            data: { Id: id },
            success: function (response) {
                $(".modal-body").html(response);
                $("#editDialog").modal("show");
            }
        });
    };


</script>
