@model Admin.Models.ViewModels.AuthorityVM

@{
    ViewBag.Title = "Uppdatera användare";
    ViewBag.Current = "Edit";
}

<div class="container">
    <hr />
    <span id="create-info">Redigerar @Model.Name</span>
    <hr />

    @using (Html.BeginForm("EditAuthority", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Category_Id, "Kategori", htmlAttributes: new { @class = "control-label" })

                    @Html.DropDownList("Category_Id", new SelectList(ViewBag.Category, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category_Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    <br />
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, style = "width:500px; height:200px" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />

            @Html.HiddenFor(model => model.Logo)

            <div class="row">
                <div class="form-group col-md-6">
                    @Html.Label("Nuvarande bild:")<br /><br />
                    <img src="@Url.Action("Show", "Admin", new { id = Model.Id } )" width="100" height="100" />
                </div>

                <div class="form-group col-md-6">
                    @Html.Label("Ladda upp ny bild:")<br /><br />
                    <img id="blah" src="#" /><br /><br />
                    <input type="file" value="Ladda upp bild" name="image1" id="image1" onchange="readURL(this)" />

                </div>
            </div>



            <div class="row">

                @Html.Label("Telefonnummer:")<br /><br />

                @foreach (var number in Model.Numbers)
    {
            <div class="form-group col-md-4">

                @Html.EditorFor(model => number.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Beskrivning" } })

                @Html.EditorFor(model => number.Number1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Telefonnummer" } })
                @Html.ValidationMessageFor(model => number.Number1, "", new { @class = "text-danger" })
                <a href="@Url.Action("EditNumber", "Admin", new { id = number.Id,name = number.Name,number = number.Number1, authId = number.Authority_Id })">Uppdatera</a> <br />
                
                <a href="@Url.Action("DeleteNumber", "Admin", new { id = number.Id, authId = number.Authority_Id })"style="color:red">Ta bort nummer</a>

            </div>
}               
                
                <div class="form-group col-md-4">


                    @Html.EditorFor(model => model.Number1.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Beskrivning" } })

                    @Html.EditorFor(model => model.Number1.Number1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nytt Telefonnummer" } })
                    @Html.ValidationMessageFor(model => model.Number1, "", new { @class = "text-danger" })
                </div>

            </div>

                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.StreetAddress, "Gatuadress", htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Zipcode, "Postnummer", htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.City, "Stad", htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-12">
                        <input type="submit" value="Uppdatera" class="btn btn-success" />
                    </div>
                </div>

            </div>
      
            }

                <div>
                    <hr />
                    @Html.ActionLink("Återgå till användarlistan", "ListUsers")
                </div>

            </div>

            <script>
                function readURL(input) {
                    if (input.files && input.files[0]) {
                        var reader = new FileReader();

                        reader.onload = function (e) {
                            $('#blah')
                                .attr('src', e.target.result)
                                .width(100)
                                .height(100);
                        };

                        reader.readAsDataURL(input.files[0]);
                    }
                }

            </script>
